<?xml version="1.0" encoding="UTF-8"?><testrun name="TaskManagerRunnerClass" project="TaskManager-Tests" tests="6" started="0" failures="0" errors="1" ignored="0">
  <testsuite name="com.ctli.it.qa.taskmanager.tests.TaskManagerRunnerClass" incomplete="true">
    <error>java.lang.NullPointerException&#13;
	at com.ctl.it.qa.staf.Steps.initData(Steps.java:61)&#13;
	at com.ctl.it.qa.staf.Steps.initialize(Steps.java:45)&#13;
	at com.ctli.it.qa.taskmanager.tests.TaskManagerRunnerClass.setEnvironment(TaskManagerRunnerClass.java:29)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at cucumber.api.junit.Cucumber.run(Cucumber.java:98)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
    <testsuite name="Feature: Title of your feature" incomplete="true">
      <testsuite name="Scenario Outline: Title of your scenario outline" incomplete="true">
        <testsuite name="Examples:" incomplete="true">
          <testsuite name="| name1 | 5 | success |" incomplete="true">
            <testcase name="Given I want to write a step with name1" classname="| name1 | 5 | success |" incomplete="true"/>
            <testcase name="When I check for the 5 in step" classname="| name1 | 5 | success |" incomplete="true"/>
            <testcase name="Then I verify the success in step" classname="| name1 | 5 | success |" incomplete="true"/>
          </testsuite>
          <testsuite name="| name2 | 7 | Fail |" incomplete="true">
            <testcase name="Given I want to write a step with name2" classname="| name2 | 7 | Fail |" incomplete="true"/>
            <testcase name="When I check for the 7 in step" classname="| name2 | 7 | Fail |" incomplete="true"/>
            <testcase name="Then I verify the Fail in step" classname="| name2 | 7 | Fail |" incomplete="true"/>
          </testsuite>
        </testsuite>
      </testsuite>
    </testsuite>
  </testsuite>
</testrun>
